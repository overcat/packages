--- a/make-mks
+++ b/make-mks
@@ -7,7 +7,7 @@ case "$0" in
 esac
 
 # Bail if not under git
-git rev-parse
+#git rev-parse
 
 trap 'rm -f src/src.mk lib/medida.mk lib/lib.mk' 0
 
@@ -18,12 +18,12 @@ message="# This file was generated by ma
 # must run "git add -N foo.cpp" before running this script.
 (cd src
  echo "$message"
- echo "SRC_H_FILES" = $(git ls-files '*.h' '*.[ih]pp' | tr " " "\n" | sort | uniq | egrep -v '(test|simulation)/' | tr "\n" " ")
- echo "SRC_CXX_FILES" = $(git ls-files '*.cpp' | tr " " "\n" | sort | uniq |  egrep -v '(test|simulation)/' | tr "\n" " ")
- echo "SRC_X_FILES" = $(git ls-files '*.x' | tr " " "\n" | sort | uniq | tr "\n" " ")
- echo "SRC_TEST_H_FILES" = $(git ls-files '*.h' '*.[ih]pp' | tr " " "\n" | egrep '(test|simulation)/' | tr "\n" " ")
- echo "SRC_TEST_CXX_FILES" = $(git ls-files '*.cpp' | tr " " "\n" | sort | uniq |  egrep '(test|simulation)/' | tr "\n" " ")
- echo "SRC_RUST_FILES" = $(git ls-files '*.rs' | tr " " "\n" | sort | uniq | tr "\n" " ")
+ echo "SRC_H_FILES" = $(find . -regextype posix-egrep -regex '.*\.(h|hpp|ipp)' -printf '%P\n' | sort -u | egrep -v '(test|simulation)/' | tr "\n" " ")
+ echo "SRC_CXX_FILES" = $(find . -regextype posix-egrep -regex '.*\.cpp' -printf '%P\n' | sort -u | egrep -v '(test|simulation)/' | tr "\n" " ")
+ echo "SRC_X_FILES" = $(find . -regextype posix-egrep -regex '.*\.(x)' -printf '%P\n' | sort -u | tr "\n" " ")
+ echo "SRC_TEST_H_FILES" = $(find . -regextype posix-egrep -regex '.*\.(h|hpp|ipp)' -printf '%P\n' | sort -u | egrep '(test|simulation)/' | tr "\n" " ")
+ echo "SRC_TEST_CXX_FILES" = $(find . -regextype posix-egrep -regex '.*\.cpp' -printf '%P\n' | sort -u | egrep '(test|simulation)/' | tr "\n" " ")
+ echo "SRC_RUST_FILES" = $(find . -regextype posix-egrep -regex '.*\.rs' -printf '%P\n' | sort -u | egrep '(test|simulation)/' | tr "\n" " ")
 ) > src/src.mk
 
 
